// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/krafton-hq/redfox/pkg/apis/redfox/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LatestCommitLister helps list LatestCommits.
// All objects returned here must be treated as read-only.
type LatestCommitLister interface {
	// List lists all LatestCommits in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.LatestCommit, err error)
	// LatestCommits returns an object that can list and get LatestCommits.
	LatestCommits(namespace string) LatestCommitNamespaceLister
	LatestCommitListerExpansion
}

// latestCommitLister implements the LatestCommitLister interface.
type latestCommitLister struct {
	indexer cache.Indexer
}

// NewLatestCommitLister returns a new LatestCommitLister.
func NewLatestCommitLister(indexer cache.Indexer) LatestCommitLister {
	return &latestCommitLister{indexer: indexer}
}

// List lists all LatestCommits in the indexer.
func (s *latestCommitLister) List(selector labels.Selector) (ret []*v1alpha1.LatestCommit, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LatestCommit))
	})
	return ret, err
}

// LatestCommits returns an object that can list and get LatestCommits.
func (s *latestCommitLister) LatestCommits(namespace string) LatestCommitNamespaceLister {
	return latestCommitNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LatestCommitNamespaceLister helps list and get LatestCommits.
// All objects returned here must be treated as read-only.
type LatestCommitNamespaceLister interface {
	// List lists all LatestCommits in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.LatestCommit, err error)
	// Get retrieves the LatestCommit from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.LatestCommit, error)
	LatestCommitNamespaceListerExpansion
}

// latestCommitNamespaceLister implements the LatestCommitNamespaceLister
// interface.
type latestCommitNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LatestCommits in the indexer for a given namespace.
func (s latestCommitNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LatestCommit, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LatestCommit))
	})
	return ret, err
}

// Get retrieves the LatestCommit from the indexer for a given namespace and name.
func (s latestCommitNamespaceLister) Get(name string) (*v1alpha1.LatestCommit, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("latestcommit"), name)
	}
	return obj.(*v1alpha1.LatestCommit), nil
}
